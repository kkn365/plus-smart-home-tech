spring:
  #Db connection
  datasource:
    driverClassName: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/analyzer_db
    username: analyzer_app
    password: Pa$$word
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    properties.hibernate:
      jdbc.time_zone: UTC
      format_sql: true
      temp.use_jdbc_metadata_defaults: false
    hibernate.ddl-auto: none
    show-sql: false
  sql.init.mode: never

logging:
  level:
    ru.yandex.practicum.telemetry: TRACE
    org:
      springframework: ERROR
      springframework.cloud.netflix.eureka: INFO
      apache.kafka: WARN

grpc:
  client:
    hub-router:
      address: 'static://localhost:59090'
      enableKeepAlive: true
      keepAliveWithoutCalls: true
      negotiationType: plaintext

analyzer:
  kafka:
    common-properties:
      "bootstrap.servers": localhost:9092
      "key.deserializer": "org.apache.kafka.common.serialization.StringDeserializer"
      "enable.auto.commit": false
    consumers:
      - type: SnapshotProcessor
        properties:
          "value.deserializer": "ru.yandex.practicum.telemetry.kafka.deserializer.SensorsSnapshotDeserializer"
          "group.id": "telemetry.analyzer.snapshot"
        topics:
          - "telemetry.snapshots.v1"
        poll-timeout: 500ms
      - type: HubEventProcessor
        properties:
          "value.deserializer": "ru.yandex.practicum.telemetry.kafka.deserializer.HubEventDeserializer"
          "group.id": "telemetry.analyzer.hub"
        topics:
          - "telemetry.hubs.v1"
        poll-timeout: 2000ms